<Window x:Class="WPFFinalExam1.View.MenuWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFFinalExam1.View"
        xmlns:v="clr-namespace:WPFFinalExam1.View"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:vm="clr-namespace:WPFFinalExam1.ViewModel"
        mc:Ignorable="d"
        Title="Weather" Height="450" Width="800" WindowState="Maximized" Icon="../Image/icon.ico">

    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontFamily="Segoe MDL2 Assets" FontSize="25" Foreground="White"
                               Text="{Binding Glyph}" />

                    <TextBlock Grid.Column="1" VerticalAlignment="Center"
                               FontSize="16" Margin="10 0 0 0" Foreground="White"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:ForecastViewModel}">
                <v:ForecastView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:HistoricalWeatherViewModel}">
                <v:HistoricalWeatherView />
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <vm:MenuWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Controls:HamburgerMenu Content="{Binding CurrentViewModel}"
                                DisplayMode="CompactInline"
                                IsPaneOpen="False"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                PaneBackground="#262626"
                                Foreground="White">

            <Controls:HamburgerMenu.ItemsSource>
                <Controls:HamburgerMenuItemCollection>

                    <Controls:HamburgerMenuGlyphItem Command="{Binding OpenForecastViewCommand}" Glyph="&#xE80F;"
                                                     Label="Forecast" />
                    <Controls:HamburgerMenuGlyphItem Command="{Binding OpenHistoricalWeatherViewCommand}"
                                                     Glyph="&#xE8F1;" Label="Historical Weather" />
                    <Controls:HamburgerMenuGlyphItem Command="{Binding OpenPopupCommand}" Glyph="&#xE76E;"
                                                     Label="Send Feedback" />

                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.ItemsSource>

        </Controls:HamburgerMenu>
        <Popup Placement="Center" StaysOpen="True" IsOpen="{Binding PopupIsOpen}">
            <Popup.Style>
                <Style TargetType="Popup">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedIndex}" Value="2">
                            <Setter Property="IsOpen" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Popup.Style>
            <Canvas Width="500" Height="400" Background="#262626">
                <TextBlock Canvas.Top="60" Canvas.Left="35" Text="Your Feedback" FontSize="30" Foreground="White" />
                <TextBlock Canvas.Top="120" Canvas.Left="35" Text="Summarize your feedback" FontSize="20"
                           Foreground="White" />
                <TextBox Text="{Binding Feedback,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                         x:Name="Text" Canvas.Top="150" Canvas.Left="35" Width="300" BorderThickness="2"
                         BorderBrush="#3c3946">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="White" />
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Canvas.Top="200" Canvas.Left="35" Text="Explain in more detail(optional)" Foreground="White"
                           FontSize="20" />
                <TextBox Text="{Binding ExplainFeedback,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap" x:Name="text2" Height="80" Canvas.Top="230" Canvas.Left="35" Width="300"
                         BorderThickness="2" BorderBrush="#3c3946">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="White" />
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Button Command="{Binding Send}" Canvas.Top="345" Canvas.Left="35" Content="Send" Height="30"
                        Width="80">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#404040" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#5f5a72" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#595959" />
                                    <Setter Property="Foreground" Value="#808080" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Canvas.Right="0" Width="30" Content="❌" Command="{Binding ClosePopupCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="Red" />
                            <Style.Triggers>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#EB2F2F" />

                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#7C0000" />
                                </Trigger>

                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </Canvas>
        </Popup>
    </Grid>
</Window>